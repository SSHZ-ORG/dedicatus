// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoconf.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protoconf struct {
	InlineQueryCacheTimeSec          *uint32  `protobuf:"varint,1,opt,name=inline_query_cache_time_sec,json=inlineQueryCacheTimeSec,def=0" json:"inline_query_cache_time_sec,omitempty"`
	TwapiLeastRecentPoolProbability  *float32 `protobuf:"fixed32,2,opt,name=twapi_least_recent_pool_probability,json=twapiLeastRecentPoolProbability,def=0.05" json:"twapi_least_recent_pool_probability,omitempty"`
	TwapiLeastRecentPoolOffsetRange  *uint32  `protobuf:"varint,3,opt,name=twapi_least_recent_pool_offset_range,json=twapiLeastRecentPoolOffsetRange,def=50" json:"twapi_least_recent_pool_offset_range,omitempty"`
	TwapiStandardPoolLimit           *uint32  `protobuf:"varint,4,opt,name=twapi_standard_pool_limit,json=twapiStandardPoolLimit,def=5" json:"twapi_standard_pool_limit,omitempty"`
	TwapiStandardPoolStepProbability *float32 `protobuf:"fixed32,5,opt,name=twapi_standard_pool_step_probability,json=twapiStandardPoolStepProbability,def=0.9" json:"twapi_standard_pool_step_probability,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *Protoconf) Reset()         { *m = Protoconf{} }
func (m *Protoconf) String() string { return proto.CompactTextString(m) }
func (*Protoconf) ProtoMessage()    {}
func (*Protoconf) Descriptor() ([]byte, []int) {
	return fileDescriptor_01f2f92ee031e165, []int{0}
}

func (m *Protoconf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protoconf.Unmarshal(m, b)
}
func (m *Protoconf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protoconf.Marshal(b, m, deterministic)
}
func (m *Protoconf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protoconf.Merge(m, src)
}
func (m *Protoconf) XXX_Size() int {
	return xxx_messageInfo_Protoconf.Size(m)
}
func (m *Protoconf) XXX_DiscardUnknown() {
	xxx_messageInfo_Protoconf.DiscardUnknown(m)
}

var xxx_messageInfo_Protoconf proto.InternalMessageInfo

const Default_Protoconf_InlineQueryCacheTimeSec uint32 = 0
const Default_Protoconf_TwapiLeastRecentPoolProbability float32 = 0.05
const Default_Protoconf_TwapiLeastRecentPoolOffsetRange uint32 = 50
const Default_Protoconf_TwapiStandardPoolLimit uint32 = 5
const Default_Protoconf_TwapiStandardPoolStepProbability float32 = 0.9

func (m *Protoconf) GetInlineQueryCacheTimeSec() uint32 {
	if m != nil && m.InlineQueryCacheTimeSec != nil {
		return *m.InlineQueryCacheTimeSec
	}
	return Default_Protoconf_InlineQueryCacheTimeSec
}

func (m *Protoconf) GetTwapiLeastRecentPoolProbability() float32 {
	if m != nil && m.TwapiLeastRecentPoolProbability != nil {
		return *m.TwapiLeastRecentPoolProbability
	}
	return Default_Protoconf_TwapiLeastRecentPoolProbability
}

func (m *Protoconf) GetTwapiLeastRecentPoolOffsetRange() uint32 {
	if m != nil && m.TwapiLeastRecentPoolOffsetRange != nil {
		return *m.TwapiLeastRecentPoolOffsetRange
	}
	return Default_Protoconf_TwapiLeastRecentPoolOffsetRange
}

func (m *Protoconf) GetTwapiStandardPoolLimit() uint32 {
	if m != nil && m.TwapiStandardPoolLimit != nil {
		return *m.TwapiStandardPoolLimit
	}
	return Default_Protoconf_TwapiStandardPoolLimit
}

func (m *Protoconf) GetTwapiStandardPoolStepProbability() float32 {
	if m != nil && m.TwapiStandardPoolStepProbability != nil {
		return *m.TwapiStandardPoolStepProbability
	}
	return Default_Protoconf_TwapiStandardPoolStepProbability
}

func init() {
	proto.RegisterType((*Protoconf)(nil), "dedicatus.protoconf.pb.Protoconf")
}

func init() { proto.RegisterFile("protoconf.proto", fileDescriptor_01f2f92ee031e165) }

var fileDescriptor_01f2f92ee031e165 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd1, 0xc1, 0x4b, 0xfb, 0x30,
	0x14, 0x07, 0x70, 0xba, 0xed, 0x77, 0xf8, 0x15, 0x44, 0xe8, 0x61, 0x56, 0x3c, 0x38, 0xd4, 0xc3,
	0x10, 0x6d, 0x7b, 0xd9, 0xc1, 0x21, 0x08, 0x7a, 0xd0, 0xc3, 0x60, 0x5b, 0xea, 0x69, 0x97, 0x90,
	0xa6, 0x6f, 0x5b, 0xa0, 0x4d, 0x62, 0xf2, 0x8a, 0xec, 0x1f, 0xf0, 0xef, 0x96, 0xa4, 0x6e, 0x6e,
	0xa8, 0xb7, 0xd2, 0x7c, 0xde, 0x97, 0xf7, 0xe5, 0x85, 0xc7, 0xda, 0x28, 0x54, 0x5c, 0xc9, 0x65,
	0xe2, 0xbf, 0xa2, 0x7e, 0x09, 0xa5, 0xe0, 0x0c, 0x1b, 0x9b, 0xec, 0x3d, 0x15, 0x17, 0x1f, 0xdd,
	0xf0, 0xff, 0x6c, 0xfb, 0x23, 0x7a, 0x08, 0xcf, 0x84, 0xac, 0x84, 0x04, 0xfa, 0xd6, 0x80, 0xd9,
	0x50, 0xce, 0xf8, 0x1a, 0x28, 0x8a, 0x1a, 0xa8, 0x05, 0x1e, 0x07, 0x83, 0x60, 0x78, 0x34, 0x0e,
	0x32, 0x72, 0xd2, 0xaa, 0xb9, 0x43, 0x4f, 0xce, 0xbc, 0x8a, 0x1a, 0x72, 0xe0, 0x11, 0x09, 0x2f,
	0xf1, 0x9d, 0x69, 0x41, 0x2b, 0x60, 0x16, 0xa9, 0x01, 0x0e, 0x12, 0xa9, 0x56, 0xaa, 0xa2, 0xda,
	0xa8, 0x82, 0x15, 0xa2, 0x12, 0xb8, 0x89, 0x3b, 0x83, 0x60, 0xd8, 0x19, 0xf7, 0xb2, 0x24, 0x1b,
	0x91, 0x73, 0x3f, 0x30, 0x71, 0x9e, 0x78, 0x3e, 0x53, 0xaa, 0x9a, 0x7d, 0xe3, 0x68, 0x1e, 0x5e,
	0xfd, 0x95, 0xa9, 0x96, 0x4b, 0x0b, 0x48, 0x0d, 0x93, 0x2b, 0x88, 0xbb, 0x7e, 0xbb, 0xce, 0x28,
	0xfb, 0x3d, 0x72, 0xea, 0x2d, 0x71, 0x34, 0xba, 0x0f, 0x4f, 0xdb, 0x48, 0x8b, 0x4c, 0x96, 0xcc,
	0x94, 0x6d, 0x5c, 0x25, 0x6a, 0x81, 0x71, 0xaf, 0x6d, 0x39, 0x22, 0x7d, 0x6f, 0xf2, 0x2f, 0xe2,
	0x32, 0x26, 0x0e, 0x44, 0xf9, 0x76, 0xa1, 0xc3, 0x69, 0x8b, 0xa0, 0x0f, 0x5a, 0xfe, 0xf3, 0x2d,
	0xbb, 0x59, 0x72, 0x47, 0x06, 0x3f, 0xa2, 0x72, 0x04, 0xbd, 0xd7, 0xf2, 0xf1, 0x66, 0x71, 0xbd,
	0x12, 0xb8, 0x6e, 0x8a, 0x84, 0xab, 0x3a, 0xcd, 0xf3, 0x97, 0xc5, 0xed, 0x94, 0x3c, 0xa7, 0xbb,
	0xb3, 0xa5, 0xbb, 0xb3, 0xa5, 0xba, 0xf8, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x55, 0x67, 0xa2,
	0xe0, 0x01, 0x00, 0x00,
}
